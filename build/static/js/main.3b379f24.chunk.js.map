{"version":3,"sources":["helpers/postData.js","services/magpie.js","components/ViewsHeader.js","dummyData.js","helpers/toPesoFormat.js","components/ProductItem.js","components/AddToCartDialog.js","components/Products.js","components/CartItem.js","components/CartItemOptionsDrawer.js","components/Cart.js","helpers/expirationYearList.js","components/CheckoutForm.js","components/OrderComplete.js","components/Checkout.js","components/FooterNavigation.js","hooks/useColorScheme.js","App.js","serviceWorker.js","index.js"],"names":["postData","url","data","key","a","publicKey","process","REACT_APP_MAGPIE_BASE64_PUBLIC_KEY","secretKey","REACT_APP_MAGPIE_BASE64_SECRET_KEY","authCode","status","code","detail","errors","fetch","method","headers","accept","Authorization","encode","body","JSON","stringify","response","json","result","hasOwnProperty","magpie","errorObj","obj","message","createToken","Promise","resolve","reject","then","createPayment","useStyles","makeStyles","theme","title","marginBottom","spacing","ViewsHeader","children","colorScheme","setColorScheme","classes","Grid","container","justify","item","Typography","variant","component","className","IconButton","onClick","aria-label","style","color","amber","dummyData","predefinedCreditCardData","attributes","number","exp_month","exp_year","cvc","billing","address","line1","city","state","country","postal_code","name","email","phone","predefinedAmount","tokenId","tokenType","amount","currency","source","id","type","productDummyData","price","details","image","PESO","value","symbol","decimal","separator","format","root","maxWidth","actions","paddingTop","paddingBottom","paddingRight","ProductItem","handleAddToCart","Card","CardContent","gutterBottom","CardActions","Button","size","disableElevation","AddToCartDialog","dialogState","handleDialogClose","itemName","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogContent","Box","display","justifyContent","mb","green","fontSize","align","Products","useState","dialog","setDialog","requestDialogCloseTimeOut","setRequestDialogCloseTimeOut","useEffect","dialogCloseDelay","setTimeout","clearTimeout","direction","map","product","CartItem","handleItemQuantity","ListItem","divider","ListItemAvatar","Avatar","ListItemText","primary","primaryTypographyProps","secondary","quantity","subTotal","CartItemOptionsDrawer","handleDrawerClose","handleCartQuantity","handRemoveFromCart","main","width","quantityFieldContainer","quantityField","textAlign","delete","Drawer","anchor","alignItems","xs","TextField","label","startIcon","cartList","backgroundColor","palette","background","paper","total","marginTop","padding","checkout","cyan","Cart","cart","cartTotal","setIndex","editQuantity","setEditQuantity","length","List","disablePadding","Paper","square","expYearList","thisYear","Date","getFullYear","years","y","year","toString","substring","push","text","form","borderBottomColor","formTitle","formTitleIcon","marginRight","table","grandTotal","blue","borderBottom","pay","error","CheckoutForm","handlePayment","handleFieldChange","billingInfo","onSubmit","Alert","severity","fullWidth","onChange","FormControl","formControl","InputLabel","Select","labelId","MenuItem","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","OrderComplete","handleConfirm","toFixed","paperTitle","paperTitleIcon","purchaseDetails","billingDetails","colSpan","paymentTransitionDelay","paddingLeft","spinner","Checkout","orderCompleteData","CircularProgress","height","buttons","FooterNavigation","index","cartCount","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","icon","Badge","badgeContent","useColorScheme","App","setCart","setCartTotal","setPaymentTransitiondDelay","setOrderCompleteData","setErrors","setBillingInfo","React","useMemo","createMuiTheme","typography","fontFamily","join","bgColor","bg","flexDirection","minHeight","footer","grey","transition","views","cartData","existingDataIndex","_","findIndex","productQuantity","reduce","acc","curr","itemId","operation","itemIndex","filter","preventDefault","magPieTokenData","card","parseInt","replace","paymongoPaymentData","catch","console","log","target","ThemeProvider","CssBaseline","Container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b379f24.chunk.js","sourcesContent":["import { encode } from 'js-base64';\n\nconst errorData = (code, detail) => {\n  return { errors: [{ code, detail }] };\n};\n\nconst postData = async (url, data, key) => {\n  const publicKey = process.env.REACT_APP_MAGPIE_BASE64_PUBLIC_KEY;\n  const secretKey = process.env.REACT_APP_MAGPIE_BASE64_SECRET_KEY;\n  const authCode =\n    key === \"public\" ? publicKey : key === \"secret\" ? secretKey : null;\n\n  if (authCode === null) {\n    return {\n      status: \"error\",\n      data: errorData(\"invalid_parameter\", \"key parameter invalid\")\n    };\n  }\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      \"content-type\": \"application/json\",\n      Authorization: `Basic ${encode(authCode)}`,\n    },\n    // referrerPolicy: 'no-referrer',\n    body: JSON.stringify(data)\n  });\n\n  const result = await response.json();\n\n  return result.hasOwnProperty(\"errors\")\n    ? { status: \"error\", data: result }\n    : { status: \"success\", data: result };\n};\n\nexport default postData;\n","import postData from \"../helpers/postData\";\n\nconst magpie = {};\n\nconst errorObj = obj => {\n  return { code: obj.code, message: obj.detail };\n};\n\nmagpie.createToken = data => {\n  const postUrl = \"https://api.magpie.im/v1/tokens\";\n\n  return new Promise((resolve, reject) => {\n    if (!data) {\n      reject(errorObj(\"no_data\", \"No data provided\"));\n      return;\n    }\n\n    postData(postUrl, data, \"public\").then(result => {\n      if (result.status === \"error\") reject(errorObj(result.data.errors[0]));\n\n      resolve(result.data);\n    });\n  });\n};\n\nmagpie.createPayment = data => {\n  const postUrl = \"https://api.magpie.im/v1/charges\";\n\n  return new Promise((resolve, reject) => {\n    if (!data) {\n      reject(errorObj(\"no_token\", \"No data provided\"));\n      return;\n    }\n\n    postData(postUrl, data, \"secret\").then(result => {\n      if (result.status === \"error\") reject(errorObj(result.data.errors[0]));\n\n      resolve(result.data);\n    });\n  });\n};\n\nexport default magpie;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Brightness5Icon from \"@material-ui/icons/Brightness5\";\nimport Brightness2Icon from \"@material-ui/icons/Brightness2\";\n\nimport amber from \"@material-ui/core/colors/amber\";\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    marginBottom: theme.spacing(3)\n  }\n}));\n\nconst ViewsHeader = ({ children, colorScheme, setColorScheme }) => {\n  const classes = useStyles();\n  return (\n    <Grid container justify=\"space-between\">\n      <Grid item>\n        <Typography variant=\"h4\" component=\"h1\" className={classes.title}>\n          {children}\n        </Typography>\n      </Grid>\n      <Grid item>\n        <IconButton\n          onClick={() =>\n            setColorScheme(colorScheme === \"dark\" ? \"light\" : \"dark\")\n          }\n          aria-label=\"set color scheme\"\n        >\n          {colorScheme === \"dark\" ? (\n            <Brightness5Icon style={{ color: amber[500] }} />\n          ) : (\n            <Brightness2Icon />\n          )}\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ViewsHeader;\n","const dummyData = {\n  predefinedCreditCardData: {\n    data: {\n      attributes: {\n        number: \"4123450131000508\",\n        exp_month: 12,\n        exp_year: 25,\n        cvc: \"111\",\n        billing: {\n          address: {\n            line1: \"address\",\n            city: \"Biñan\",\n            state: \"Laguna\",\n            country: \"PH\",\n            postal_code: \"4024\"\n          },\n          name: \"John\",\n          email: \"johnmail@gmail.com\",\n          phone: \"09988909890\"\n        }\n      }\n    }\n  },\n  predefinedAmount: (tokenId, tokenType) => {\n    return {\n      data: {\n        attributes: {\n          amount: 10000,\n          currency: \"PHP\",\n          source: {\n            id: tokenId,\n            type: tokenType\n          }\n        }\n      }\n    };\n  },\n  productDummyData: [\n    {\n      id: \"1\",\n      title: \"Product Item\",\n      price: 5000,\n      details: \"Product short description\",\n      image: \"https://placeimg.com/640/480/tech\"\n    },\n    {\n      id: \"2\",\n      title: \"Product Item with a long name\",\n      price: 8000,\n      details: \"Product short description\",\n      image: \"https://placeimg.com/640/480/tech\"\n    }\n  ]\n};\n\nexport default dummyData;\n","import currency from \"currency.js\";\n\nconst PESO = value =>\n  currency(value, { symbol: \"₱\", decimal: \".\", separator: \",\" }).format(true);\n\nexport default PESO;\n","import React from \"react\";\nimport PESO from \"../helpers/toPesoFormat\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 600\n  },\n  actions: {\n    paddingTop: 0,\n    paddingBottom: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  price: {\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nconst ProductItem = ({ data, handleAddToCart, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\n            {data.title}\n          </Typography>\n          <Typography className={classes.price} color=\"textSecondary\">\n            {`${PESO(data.price)}`}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {data.details}\n          </Typography>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <Grid container justify=\"flex-end\">\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              variant=\"contained\"\n              disableElevation\n              onClick={() => handleAddToCart(data)}\n            >\n              Add to cart\n            </Button>\n          </Grid>\n        </CardActions>\n      </Card>\n    </>\n  );\n};\n\nexport default ProductItem;\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport green from \"@material-ui/core/colors/green\";\n\nconst AddToCartDialog = ({ dialogState, handleDialogClose, itemName }) => {\n  return (\n    <Dialog\n      open={dialogState}\n      onClose={handleDialogClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogContent>\n        <Box component=\"div\" display=\"flex\" justifyContent=\"center\" mb={2}>\n          <AddShoppingCartIcon style={{ color: green[500] }} fontSize=\"large\" />\n        </Box>\n\n        <Typography variant=\"h6\" component=\"h6\" align=\"center\" gutterBottom>\n          {itemName}\n        </Typography>\n        <Typography\n          component=\"p\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          Added to cart\n        </Typography>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default AddToCartDialog;\n","import React, { useState, useEffect } from \"react\";\nimport dummyData from \"../dummyData\";\nimport ProductItem from \"./ProductItem\";\nimport AddToCartDialog from \"./AddToCartDialog\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nconst Products = ({ handleAddToCart }) => {\n  const [dialog, setDialog] = useState({ open: false, itemName: \"\" });\n  const [requestDialogCloseTimeOut, setRequestDialogCloseTimeOut] = useState(\n    false\n  );\n\n  useEffect(() => {\n    let dialogCloseDelay = false;\n\n    if (requestDialogCloseTimeOut) {\n      dialogCloseDelay = setTimeout(() => {\n        dialogCloseDelay = false;\n        setRequestDialogCloseTimeOut(false);\n        setDialog({ ...dialog, open: false });\n      }, 3000);\n    }\n\n    return () => {\n      if (dialogCloseDelay) {\n        clearTimeout(dialogCloseDelay);\n      }\n    };\n  }, [requestDialogCloseTimeOut, setDialog, dialog]);\n\n  const handleDialogClose = () => {\n    setDialog({ ...dialog, open: false });\n    setRequestDialogCloseTimeOut(false);\n  };\n\n  return (\n    <>\n      {!!dummyData.productDummyData && (\n        <>\n          <Grid container direction=\"column\" spacing={2}>\n            {dummyData.productDummyData.map(product => (\n              <Grid item key={product.id}>\n                <ProductItem\n                  data={product}\n                  handleAddToCart={() => {\n                    handleAddToCart(product);\n                    setDialog({ open: true, itemName: product.title });\n                    setRequestDialogCloseTimeOut(true);\n                  }}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </>\n      )}\n\n      <AddToCartDialog\n        handleDialogClose={handleDialogClose}\n        dialogState={dialog.open}\n        itemName={dialog.itemName}\n      />\n    </>\n  );\n};\n\nexport default Products;\n","import React from \"react\";\nimport PESO from \"../helpers/toPesoFormat\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport Box from \"@material-ui/core/Box\";\n\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst CartItem = ({ item, handleItemQuantity }) => {\n  return (\n    <>\n      <ListItem divider>\n        <ListItemAvatar>\n          <Avatar>\n            <ImageIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={item.title}\n          primaryTypographyProps={{ gutterBottom: true, component: \"p\" }}\n          secondary={\n            <>\n              {`Price: ${PESO(item.price)}`}\n              <br />\n              {`Quantity: ${item.quantity}`}\n              <br />\n              {`Subtotal: ${PESO(item.subTotal)}`}\n            </>\n          }\n        />\n        <Box component=\"div\">\n          <IconButton\n            onClick={() => handleItemQuantity(item)}\n            aria-label=\"add to likes\"\n          >\n            <EditIcon />\n          </IconButton>\n        </Box>\n      </ListItem>\n    </>\n  );\n};\n\nexport default CartItem;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Grid from \"@material-ui/core/Grid\";\n// import Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst CartItemOptionsDrawer = ({\n  item,\n  open,\n  handleDrawerClose,\n  handleCartQuantity,\n  handRemoveFromCart\n}) => {\n  const useStyles = makeStyles(theme => ({\n    main: {\n      width: \"100%\",\n      maxWidth: 260,\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2)\n    },\n    quantityFieldContainer: {\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(3)\n    },\n    quantityField: {\n      maxWidth: 100,\n      textAlign: \"center\"\n    },\n    delete: {\n      marginBottom: theme.spacing(1)\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Drawer anchor=\"bottom\" open={open} onClose={handleDrawerClose}>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12} className={classes.main}>\n          <Typography\n            component=\"p\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            {item.title}\n          </Typography>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            className={classes.quantityFieldContainer}\n          >\n            <div>\n              <IconButton\n                onClick={() => handleCartQuantity(item.id, \"decrement\")}\n                aria-label=\"decrement\"\n              >\n                <RemoveIcon />\n              </IconButton>\n            </div>\n\n            <div>\n              <TextField\n                id=\"quantity\"\n                label=\"Quantity\"\n                variant=\"outlined\"\n                value={item.quantity}\n                className={classes.quantityField}\n              />\n            </div>\n\n            <div>\n              <IconButton\n                onClick={() => handleCartQuantity(item.id, \"increment\")}\n                aria-label=\"increment\"\n              >\n                <AddIcon />\n              </IconButton>\n            </div>\n          </Grid>\n\n          <Grid container direction=\"column\" justify=\"center\">\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              disableElevation\n              onClick={() => {\n                handleDrawerClose();\n                handRemoveFromCart(item.id);\n              }}\n              startIcon={<DeleteIcon />}\n              className={classes.delete}\n            >\n              Remove from Cart\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disableElevation\n              onClick={handleDrawerClose}\n              startIcon={<CloseIcon />}\n            >\n              Close\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Drawer>\n  );\n};\n\nexport default CartItemOptionsDrawer;\n","import React, { useState } from \"react\";\nimport PESO from \"../helpers/toPesoFormat\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport CartItem from \"./CartItem\";\nimport CartItemOptionsDrawer from \"./CartItemOptionsDrawer\";\nimport cyan from \"@material-ui/core/colors/cyan\";\n\nconst useStyles = makeStyles(theme => ({\n  cartList: {\n    width: \"100%\",\n    maxWidth: 600,\n    backgroundColor: theme.palette.background.paper\n  },\n  total: {\n    marginTop: theme.spacing(3),\n    padding: theme.spacing(2)\n  },\n  checkout: {\n    color: theme.palette.type === \"dark\" ? cyan[300] : theme.palette.primary\n  }\n}));\n\nconst Cart = ({\n  cart,\n  cartTotal,\n  handleCartQuantity,\n  handRemoveFromCart,\n  setIndex\n}) => {\n  const [editQuantity, setEditQuantity] = useState({\n    open: false,\n    item: { title: \"\", quantity: \"\" }\n  });\n\n  const handleItemQuantity = item => {\n    setEditQuantity({ open: true, item });\n  };\n\n  const handleDrawerClose = () => {\n    setEditQuantity({ ...editQuantity, open: false });\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      {cart.length > 0 && (\n        <>\n          <List component=\"nav\" className={classes.cartList} disablePadding>\n            {cart.map(item => (\n              <CartItem\n                key={item.id}\n                item={item}\n                open={editQuantity.open}\n                handleItemQuantity={handleItemQuantity}\n              />\n            ))}\n          </List>\n\n          <Paper square className={classes.total}>\n            <Grid container justify=\"space-between\">\n              <Grid item>\n                <Typography variant=\"h6\" component=\"h6\">\n                  Total: {PESO(cartTotal)}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Button\n                  className={classes.checkout}\n                  onClick={() => setIndex(2)}\n                >\n                  Checkout\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </>\n      )}\n\n      {cart.length <= 0 && <p>Cart is empty. Please add products your cart.</p>}\n\n      <CartItemOptionsDrawer\n        open={editQuantity.open}\n        item={editQuantity.item}\n        handleDrawerClose={handleDrawerClose}\n        handleCartQuantity={handleCartQuantity}\n        handRemoveFromCart={handRemoveFromCart}\n      />\n    </>\n  );\n};\n\nexport default Cart;\n","const expYearList = () => {\n  let yearsToShow = 20;\n  let thisYear = new Date().getFullYear();\n  let years = [];\n\n  for (let y = thisYear; y < thisYear + yearsToShow; y++) {\n    let year = y.toString().substring(2);\n    years.push({ value: year, text: year });\n  }\n\n  return years;\n};\n\nexport default expYearList;\n","import React from \"react\";\nimport expYearList from \"../helpers/expirationYearList\";\nimport PESO from \"../helpers/toPesoFormat\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\n\nimport blue from \"@material-ui/core/colors/blue\";\nimport green from \"@material-ui/core/colors/green\";\nimport cyan from \"@material-ui/core/colors/cyan\";\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    marginBottom: theme.spacing(3)\n  },\n  form: {\n    \"& .MuiInput-root\": {\n      marginBottom: theme.spacing(1)\n    },\n    \"& .MuiFormLabel-root.Mui-focused\": {\n      color: theme.palette.type === \"dark\" ? cyan[300] : theme.palette.primary\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor:\n        theme.palette.type === \"dark\" ? cyan[300] : theme.palette.primary\n    }\n  },\n  formTitle: {\n    padding: 4\n  },\n  formTitleIcon: {\n    marginRight: theme.spacing(1),\n    color:\n      theme.palette.type === \"dark\" ? cyan[300] : theme.palette.secondary.main\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    marginTop: theme.spacing(1)\n  },\n  grandTotal: {\n    \"& td\": {\n      backgroundColor: theme.palette.type === \"dark\" ? blue[700] : blue[50],\n      borderBottom: \"none\"\n    },\n    \"& .MuiTableCell-root\": {\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2)\n    }\n  },\n  pay: {\n    marginTop: theme.spacing(2),\n    backgroundColor: green[600],\n    \"&:hover, &:focus, &:active\": {\n      backgroundColor: green[900]\n    }\n  },\n  error: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nconst CheckoutForm = ({\n  cart,\n  cartTotal,\n  handlePayment,\n  handleFieldChange,\n  billingInfo,\n  errors\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      {cart.length > 0 && (\n        <form className={classes.form} onSubmit={handlePayment}>\n          <Paper className={classes.paper}>\n            {errors && (\n              <Alert severity=\"error\" className={classes.error}>\n                {errors}\n              </Alert>\n            )}\n            <Grid\n              container\n              alignItems=\"center\"\n              spacing={1}\n              className={classes.formTitle}\n            >\n              <CreditCardIcon className={classes.formTitleIcon} />\n              <Typography variant=\"h6\" component=\"h6\">\n                Credit Card\n              </Typography>\n            </Grid>\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"number\"\n                  name=\"number\"\n                  fullWidth\n                  label=\"Credit Card Number\"\n                  onChange={handleFieldChange}\n                  value={billingInfo.number}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <FormControl className={classes.formControl} fullWidth>\n                  <InputLabel id=\"exp-month-label\">Exp. Month</InputLabel>\n                  <Select\n                    labelId=\"exp-month-label\"\n                    id=\"exp_month\"\n                    name=\"exp_month\"\n                    value={billingInfo.exp_month}\n                    fullWidth\n                    onChange={handleFieldChange}\n                  >\n                    <MenuItem value={1}>1</MenuItem>\n                    <MenuItem value={2}>2</MenuItem>\n                    <MenuItem value={3}>3</MenuItem>\n                    <MenuItem value={4}>4</MenuItem>\n                    <MenuItem value={5}>5</MenuItem>\n                    <MenuItem value={6}>6</MenuItem>\n                    <MenuItem value={7}>7</MenuItem>\n                    <MenuItem value={8}>8</MenuItem>\n                    <MenuItem value={9}>9</MenuItem>\n                    <MenuItem value={10}>10</MenuItem>\n                    <MenuItem value={11}>11</MenuItem>\n                    <MenuItem value={12}>12</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={6}>\n                <FormControl className={classes.formControl} fullWidth>\n                  <InputLabel id=\"exp-year-label\">Exp. Year</InputLabel>\n                  <Select\n                    labelId=\"exp-year-label\"\n                    id=\"exp_year\"\n                    name=\"exp_year\"\n                    value={billingInfo.exp_year}\n                    fullWidth\n                    onChange={handleFieldChange}\n                  >\n                    {expYearList().map(year => (\n                      <MenuItem key={year.value} value={year.value}>\n                        {year.text}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"cvc\"\n                  name=\"cvc\"\n                  value={billingInfo.cvc}\n                  fullWidth\n                  label=\"CVC\"\n                  onChange={handleFieldChange}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n\n          <Paper className={classes.paper}>\n            <Grid\n              container\n              alignItems=\"center\"\n              spacing={1}\n              className={classes.formTitle}\n            >\n              <AccountBoxIcon className={classes.formTitleIcon} />\n              <Typography variant=\"h6\" component=\"h6\">\n                Billing Details\n              </Typography>\n            </Grid>\n\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"name\"\n                  name=\"name\"\n                  value={billingInfo.name}\n                  onChange={handleFieldChange}\n                  fullWidth\n                  label=\"Full Name\"\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={billingInfo.email}\n                  fullWidth\n                  label=\"Email\"\n                  onChange={handleFieldChange}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  id=\"phone\"\n                  value={billingInfo.phone}\n                  name=\"phone\"\n                  fullWidth\n                  label=\"Phone No.\"\n                  onChange={handleFieldChange}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"address\"\n                  name=\"line1\"\n                  value={billingInfo.line1}\n                  fullWidth\n                  label=\"Address\"\n                  onChange={handleFieldChange}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  id=\"city\"\n                  name=\"city\"\n                  value={billingInfo.city}\n                  fullWidth\n                  label=\"City\"\n                  onChange={handleFieldChange}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  id=\"state\"\n                  name=\"state\"\n                  value={billingInfo.state}\n                  fullWidth\n                  label=\"State\"\n                  onChange={handleFieldChange}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  id=\"country\"\n                  name=\"country\"\n                  value={billingInfo.country}\n                  fullWidth\n                  label=\"Country\"\n                  onChange={handleFieldChange}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  id=\"postal_code\"\n                  name=\"postal_code\"\n                  value={billingInfo.postal_code}\n                  fullWidth\n                  label=\"Postal Code\"\n                  onChange={handleFieldChange}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n\n          <Paper className={classes.paper}>\n            <Grid\n              container\n              alignItems=\"center\"\n              spacing={1}\n              className={classes.formTitle}\n            >\n              <ShoppingBasketIcon className={classes.formTitleIcon} />\n              <Typography variant=\"h6\" component=\"h6\">\n                Order Review\n              </Typography>\n            </Grid>\n\n            <TableContainer>\n              <Table\n                className={classes.table}\n                aria-label=\"review order table\"\n                size=\"small\"\n              >\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Item</TableCell>\n                    <TableCell align=\"right\">Subtotal</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {cart.map(item => (\n                    <TableRow key={item.id}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {item.title}\n\n                        <Typography\n                          variant=\"body2\"\n                          component=\"p\"\n                          color=\"textSecondary\"\n                        >\n                          {`Price: ${PESO(item.price)}`}\n                          <br />\n                          {`Quantity: ${item.quantity}`}\n                        </Typography>\n                      </TableCell>\n                      <TableCell align=\"right\">{PESO(item.subTotal)}</TableCell>\n                    </TableRow>\n                  ))}\n\n                  <TableRow className={classes.grandTotal}>\n                    <TableCell>\n                      <strong>Grand Total</strong>:\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <strong>{PESO(cartTotal)}</strong>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.pay}\n              size=\"large\"\n              fullWidth\n              onClick={handlePayment}\n            >\n              Pay with magpie\n            </Button>\n          </Paper>\n        </form>\n      )}\n    </>\n  );\n};\n\nexport default CheckoutForm;\n","import React from \"react\";\nimport PESO from \"../helpers/toPesoFormat\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport DoneAllOutlinedIcon from \"@material-ui/icons/DoneAllOutlined\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport green from \"@material-ui/core/colors/green\";\n\nconst OrderComplete = ({ data, handleConfirm }) => {\n  const result = { ...data.data };\n  const amount = PESO((result.attributes.amount / 100).toFixed(2));\n\n  const { email, name, phone } = result.attributes.billing;\n  const {\n    line1,\n    city,\n    postal_code,\n    state,\n    country\n  } = result.attributes.billing.address;\n\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      padding: theme.spacing(2),\n      marginBottom: theme.spacing(2)\n    },\n    paperTitle: {\n      padding: 4\n    },\n    paperTitleIcon: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2)\n    },\n    purchaseDetails: {\n      marginBottom: theme.spacing(2)\n    },\n    billingDetails: {\n      marginBottom: theme.spacing(4)\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Paper className={classes.paper}>\n        <Grid container justify=\"center\" spacing={1}>\n          <DoneAllOutlinedIcon\n            className={classes.paperTitleIcon}\n            style={{ color: green[500] }}\n          />\n        </Grid>\n\n        <Typography\n          variant=\"h5\"\n          className={classes.paperTitle}\n          component=\"h5\"\n          align=\"center\"\n          gutterBottom\n        >\n          Payment Successful!\n        </Typography>\n\n        <TableContainer className={classes.purchaseDetails}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell colSpan={2}>Purchase Details</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>Amount</TableCell>\n                <TableCell>{amount}</TableCell>\n              </TableRow>\n\n              <TableRow>\n                <TableCell>Magpie Reference No.</TableCell>\n                <TableCell>{result.id}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <TableContainer className={classes.billingDetails}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell colSpan={2}>Billing Details</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>{name}</TableCell>\n              </TableRow>\n\n              <TableRow>\n                <TableCell>Email</TableCell>\n                <TableCell>{email}</TableCell>\n              </TableRow>\n\n              <TableRow>\n                <TableCell>Phone</TableCell>\n                <TableCell>{phone}</TableCell>\n              </TableRow>\n\n              <TableRow>\n                <TableCell>Address</TableCell>\n                <TableCell>\n                  {line1}, {city}, {postal_code}, {state}, {country}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.pay}\n          size=\"large\"\n          fullWidth\n          onClick={handleConfirm}\n        >\n          Confirm\n        </Button>\n      </Paper>\n    </>\n  );\n};\n\nexport default OrderComplete;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport CheckoutForm from \"./CheckoutForm\";\nimport OrderComplete from \"./OrderComplete\";\n\nimport cyan from \"@material-ui/core/colors/cyan\";\n\nconst useStyles = makeStyles(theme => ({\n  paymentTransitionDelay: {\n    paddingTop: theme.spacing(5),\n    paddingBottom: theme.spacing(4),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2)\n  },\n  spinner: {\n    marginBottom: theme.spacing(2),\n    \"& .MuiCircularProgress-root\": {\n      color: theme.palette.type === \"dark\" ? cyan[300] : theme.palette.primary\n    }\n  }\n}));\n\nconst Checkout = ({\n  cart,\n  cartTotal,\n  handlePayment,\n  handleFieldChange,\n  billingInfo,\n  orderCompleteData,\n  handleConfirm,\n  paymentTransitionDelay,\n  errors\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      {paymentTransitionDelay && (\n        <>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Grid\n                container\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                component={Paper}\n                className={classes.paymentTransitionDelay}\n              >\n                <Grid item className={classes.spinner}>\n                  <CircularProgress />\n                </Grid>\n                <Grid item>\n                  <Typography component=\"p\" align=\"center\">\n                    Performing payment transaction, please wait.\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </>\n      )}\n\n      {cart.length <= 0 && !!orderCompleteData && !paymentTransitionDelay && (\n        <>\n          <OrderComplete\n            data={orderCompleteData}\n            handleConfirm={handleConfirm}\n          />\n        </>\n      )}\n\n      {cart.length > 0 && !orderCompleteData && !paymentTransitionDelay && (\n        <>\n          <CheckoutForm\n            cart={cart}\n            cartTotal={cartTotal}\n            handlePayment={handlePayment}\n            handleFieldChange={handleFieldChange}\n            billingInfo={billingInfo}\n            errors={errors}\n          />\n        </>\n      )}\n\n      {cart.length <= 0 && !orderCompleteData && !paymentTransitionDelay && (\n        <p>Cart is empty. Please add products your cart.</p>\n      )}\n    </>\n  );\n};\n\nexport default Checkout;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\nimport StorefrontRoundedIcon from \"@material-ui/icons/StorefrontRounded\";\nimport CreditCardRoundedIcon from \"@material-ui/icons/CreditCardRounded\";\nimport Badge from \"@material-ui/core/Badge\";\nimport cyan from \"@material-ui/core/colors/cyan\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 80\n  },\n  buttons: {\n    \"& svg\": {\n      marginBottom: 5\n    },\n    \"&.Mui-selected\": {\n      color: theme.palette.type === \"dark\" ? cyan[300] : theme.palette.primary\n    }\n  }\n}));\n\nconst FooterNavigation = ({ onChange, index, cartCount }) => {\n  const classes = useStyles();\n\n  return (\n    <BottomNavigation\n      value={index}\n      onChange={(event, newValue) => {\n        onChange(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction\n        className={classes.buttons}\n        label=\"Products\"\n        icon={<StorefrontRoundedIcon />}\n      />\n      <BottomNavigationAction\n        className={classes.buttons}\n        label=\"Cart\"\n        icon={\n          <Badge color=\"secondary\" badgeContent={cartCount}>\n            <ShoppingCartOutlinedIcon />\n          </Badge>\n        }\n      />\n      <BottomNavigationAction\n        className={classes.buttons}\n        label=\"Checkout\"\n        icon={<CreditCardRoundedIcon />}\n      />\n    </BottomNavigation>\n  );\n};\n\nexport default FooterNavigation;\n","import { useState } from \"react\";\n\nconst useColorScheme = () => {\n  const [colorScheme, setColorScheme] = useState(\"light\");\n  return { colorScheme, setColorScheme };\n};\n\nexport default useColorScheme;\n","import React, { useState, useEffect } from \"react\";\nimport magpie from \"./services/magpie\";\nimport _ from \"lodash\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider\n} from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport ViewsHeader from \"./components/ViewsHeader\";\nimport Products from \"./components/Products\";\nimport Cart from \"./components/Cart\";\nimport Checkout from \"./components/Checkout\";\nimport FooterNavigation from \"./components/FooterNavigation\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport grey from \"@material-ui/core/colors/grey\";\n\n\n\n\n// const Magpie = require('magpie-js-sdk');\n// const sandbox = true;\n// const public_key = 'pk_test_sYorXrJmYCT4cAl4U6Y9Hg';\n// const secret_key = 'sk_test_65ObRyp13oxOyLvw65I2sQ';\n\n\n// const version = 'v1.1';\n// const magpies = new Magpie(public_key, secret_key, sandbox, version);\n\n\n// const card = {\n//     name: 'Juan de la Cruz',\n//     number: '5555555555554444',\n//     exp_month: '02',\n//     exp_year: '2022',\n//     cvv: '123'\n// }\n\n// magpies.token.create(card.name, card.number, card.exp_month, card.exp_year, card.cvv)\n//     .then(response => {\n//       console.log('dsd', response)\n//         // // We will actually just log response to console :)\n//         // if (response.statusCode === 201) {\n//         //     // Success\n//         //     console.log(JSON.stringify(response, null, 2));\n//         // } else {\n//         //     // Error\n//         //     console.log(response);\n//         // }\n//     });\n\n\n\n\n\n\n\n\n\n\n\nconst useStyles = bgColor => {\n  const bg = bgColor ? { backgroundColor: bgColor } : {};\n\n  return makeStyles(theme => ({\n    root: {\n      ...bg,\n      display: \"flex\",\n      flexDirection: \"column\",\n      minHeight: \"100vh\"\n    },\n    main: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(2)\n    },\n    footer: {\n      marginTop: \"auto\"\n    }\n  }));\n};\n\nconst App = () => {\n  const { colorScheme, setColorScheme } = useColorScheme();\n\n  const [index, setIndex] = useState(0);\n  const [cart, setCart] = useState([]);\n  const [cartTotal, setCartTotal] = useState();\n  const [paymentTransitionDelay, setPaymentTransitiondDelay] = useState(false);\n  const [orderCompleteData, setOrderCompleteData] = useState(null);\n  const [errors, setErrors] = useState(null);\n  const [billingInfo, setBillingInfo] = useState({\n    number: \"4123450131000508\",\n    exp_month: 12,\n    exp_year: 25,\n    cvc: \"111\",\n    line1: \"blk 1 lot 1 address example\",\n    city: \"Biñan\",\n    state: \"Laguna\",\n    country: \"PH\",\n    postal_code: \"4024\",\n    name: \"John\",\n    email: \"johnmail@gmail.com\",\n    phone: \"09988909890\"\n  });\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: colorScheme\n        },\n        typography: {\n          fontFamily: [\n            \"Roboto\",\n            \"-apple-system\",\n            \"BlinkMacSystemFont\",\n            '\"Segoe UI\"',\n            '\"Helvetica Neue\"',\n            \"Arial\",\n            \"sans-serif\",\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"'\n          ].join(\",\")\n        }\n      }),\n    [colorScheme]\n  );\n\n  const classes = useStyles(colorScheme === \"light\" ? grey[300] : \"\")();\n\n  useEffect(() => {\n    let transition = false;\n\n    if (paymentTransitionDelay) {\n      transition = setTimeout(() => {\n        transition = false;\n        setPaymentTransitiondDelay(false);\n      }, 5000);\n    }\n\n    return () => {\n      if (transition) {\n        clearTimeout(transition);\n      }\n    };\n  }, [paymentTransitionDelay]);\n\n  const handlePayment = event => {\n    event.preventDefault();\n\n    const {\n      number,\n      exp_month,\n      exp_year,\n      cvc,\n      name,\n    } = billingInfo;\n\n    const magPieTokenData = {\n      card: {\n        number,\n        exp_month: parseInt(exp_month),\n        exp_year: parseInt(exp_year),\n        cvc,\n        name\n      }\n    };\n\n    const amount = parseInt(\n      cartTotal\n        .toFixed(2)\n        .toString()\n        .replace(\".\", \"\")\n    );\n\n    const paymongoPaymentData = (tokenId, tokenType) => {\n      return {\n        data: {\n          attributes: {\n            amount,\n            currency: \"PHP\",\n            source: {\n              id: tokenId,\n              type: tokenType\n            }\n          }\n        }\n      };\n    };\n\n    setPaymentTransitiondDelay(true);\n    setErrors(null);\n\n    magpie\n      .createToken(magPieTokenData)\n      .then(result => {\n        const tokenId = result.data.id;\n        const tokenType = result.data.type;\n\n        magpie\n          .createPayment(paymongoPaymentData(tokenId, tokenType))\n          .then(data => {\n            setOrderCompleteData(data);\n            setCart([]);\n            setCartTotal(null);\n          })\n          .catch(error => {\n            const code = error.code;\n            const message = error.message;\n            console.log(code, message);\n          });\n      })\n      .catch(error => {\n        const code = error.code;\n        const message = error.message;\n        console.log(code, message);\n        setErrors(message);\n      });\n  };\n\n  const handleFieldChange = event => {\n    const { name, value } = event.target;\n\n    setBillingInfo({ ...billingInfo, [name]: value });\n  };\n\n  const handleAddToCart = product => {\n    const cartData = [...cart];\n    const existingDataIndex = _.findIndex(cartData, { id: product.id });\n\n    if (existingDataIndex >= 0) {\n      // 1. if product is already in cart, perform merge\n      const productQuantity = cartData[existingDataIndex].quantity + 1;\n      const subTotal = cartData[existingDataIndex].price * productQuantity;\n\n      cartData[existingDataIndex] = {\n        ...product,\n        quantity: productQuantity,\n        subTotal: subTotal\n      };\n    } else {\n      // 2. if product is not in the cart, perform add\n      cartData.push({\n        ...product,\n        quantity: 1,\n        subTotal: product.price\n      });\n    }\n\n    const total = cartData.reduce((acc, curr) => acc + curr.subTotal, 0);\n    setCartTotal(total);\n\n    setCart(cartData);\n    setOrderCompleteData(null);\n  };\n\n  const handleCartQuantity = (itemId, operation) => {\n    const cartData = [...cart];\n    const itemIndex = _.findIndex(cartData, { id: itemId });\n\n    switch (operation) {\n      case \"increment\":\n        cartData[itemIndex].quantity++;\n        break;\n      case \"decrement\":\n        if (cartData[itemIndex].quantity > 1) {\n          cartData[itemIndex].quantity--;\n        }\n        break;\n      default:\n        break;\n    }\n\n    const price = cartData[itemIndex].price;\n    const quantity = cartData[itemIndex].quantity;\n\n    cartData[itemIndex].subTotal = price * quantity;\n\n    const total = cartData.reduce((acc, curr) => acc + curr.subTotal, 0);\n    setCartTotal(total);\n\n    setCart(cartData);\n  };\n\n  const handRemoveFromCart = itemId => {\n    let cartData = [...cart];\n    cartData = _.filter(cartData, item => item.id !== itemId);\n\n    const total = cartData.reduce((acc, curr) => acc + curr.subTotal, 0);\n    setCartTotal(total);\n\n    setCart(cartData);\n  };\n\n  const handleConfirm = () => {\n    setIndex(0);\n    setOrderCompleteData(null);\n  };\n\n  const views = [\n    {\n      title: \"Products\",\n      component: <Products handleAddToCart={handleAddToCart} />\n    },\n    {\n      title: \"Cart\",\n      component: (\n        <Cart\n          cart={cart}\n          cartTotal={cartTotal}\n          handleCartQuantity={handleCartQuantity}\n          handRemoveFromCart={handRemoveFromCart}\n          setIndex={setIndex}\n        />\n      )\n    },\n    {\n      title: \"Checkout\",\n      component: (\n        <Checkout\n          cart={cart}\n          cartTotal={cartTotal}\n          handlePayment={handlePayment}\n          handleFieldChange={handleFieldChange}\n          billingInfo={billingInfo}\n          orderCompleteData={orderCompleteData}\n          handleConfirm={handleConfirm}\n          paymentTransitionDelay={paymentTransitionDelay}\n          errors={errors}\n        />\n      )\n    }\n  ];\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n          {\n            <ViewsHeader\n              colorScheme={colorScheme}\n              setColorScheme={setColorScheme}\n            >\n              {views[index].title}\n            </ViewsHeader>\n          }\n          {views[index].component}\n        </Container>\n\n        <Container component=\"footer\" className={classes.footer} maxWidth=\"sm\">\n          <FooterNavigation\n            onChange={setIndex}\n            index={index}\n            cartCount={cart.length}\n          />\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"typeface-roboto\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}